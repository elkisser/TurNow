{% extends 'base.html.twig' %}

{% block title %}{{ servicio.nombre }} - TurNow{% endblock %}

{% block css %}
{{ parent() }}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --dark-color: #2c3e50;
        --light-color: #f8f9fa;
        --border-radius: 16px;
        --box-shadow: 0 20px 60px rgba(0,0,0,0.1);
        --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', sans-serif;
        background-color: #f5f7fb;
        color: #2c3e50;
        margin: 0;
        padding: 0;
    }

    .service-page {
        min-height: 100vh;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }
    
    /* Header con Banner */
    .page-header {
        height: 70vh;
        min-height: 600px;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        background-size: cover;
        background-position: center;
        overflow: hidden;
    }
    
    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.85) 0%, rgba(118, 75, 162, 0.85) 100%);
    }
    
    .header-content {
        position: relative;
        z-index: 2;
        text-align: center;
        max-width: 900px;
        padding: 0 2rem;
    }
    
    .page-title {
        font-size: 4.5rem;
        font-weight: 800;
        margin-bottom: 1.5rem;
        text-shadow: 2px 2px 8px rgba(0,0,0,0.5);
        line-height: 1.1;
        background: linear-gradient(135deg, #fff 0%, #e0e7ff 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .page-description {
        font-size: 1.5rem;
        opacity: 0.95;
        line-height: 1.6;
        margin-bottom: 2.5rem;
        font-weight: 300;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
    }
    
    /* Contenido Principal */
    .page-content {
        padding: 5rem 2rem;
        max-width: 1200px;
        margin: 0 auto;
    }
    
    /* Sección de Horarios Premium */
    .schedule-section {
        background: rgba(255, 255, 255, 0.95);
        padding: 4rem;
        border-radius: 25px;
        box-shadow: var(--box-shadow);
        margin-bottom: 4rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    .section-heading {
        font-size: 3rem;
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 3rem;
        text-align: center;
        position: relative;
    }
    
    .section-heading::after {
        content: '';
        display: block;
        width: 100px;
        height: 5px;
        background: var(--primary-gradient);
        margin: 1.5rem auto;
        border-radius: 3px;
    }
    
    .schedule-grid {
        display: grid;
        gap: 2rem;
        margin-bottom: 3rem;
    }
    
    .schedule-day {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        padding: 2.5rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        border-left: 5px solid #667eea;
        transition: var(--transition);
    }
    
    .schedule-day:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(102, 126, 234, 0.15);
    }
    
    .day-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        padding-bottom: 1.5rem;
        border-bottom: 2px solid #e9ecef;
    }
    
    .day-name {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--dark-color);
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
    
    .day-name i {
        color: #667eea;
        font-size: 1.3rem;
    }
    
    .day-status {
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .status-open {
        background: var(--secondary-gradient);
        color: white;
        box-shadow: 0 4px 15px rgba(67, 233, 123, 0.3);
    }
    
    .status-closed {
        background: var(--danger-gradient);
        color: white;
        box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
    }
    
    .time-slots-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
        gap: 1.2rem;
    }
    
    .time-slot {
        background: white;
        border: 2px solid #e9ecef;
        padding: 1.25rem 1rem;
        border-radius: 15px;
        text-align: center;
        font-weight: 600;
        color: #495057;
        cursor: pointer;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }
    
    .time-slot::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: var(--primary-gradient);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 1;
    }
    
    .time-slot span {
        position: relative;
        z-index: 2;
    }
    
    .time-slot:hover {
        border-color: #667eea;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.2);
    }
    
    .time-slot:hover::before {
        opacity: 1;
    }
    
    .time-slot.selected {
        background: var(--primary-gradient);
        color: white;
        border-color: #667eea;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        transform: scale(1.05);
    }
    
    .time-slot.selected::before {
        opacity: 1;
    }
    
    /* Botón de Reserva */
    .reserve-btn-container {
        text-align: center;
        margin-top: 3rem;
        padding: 2rem;
    }
    
    .reserve-btn {
        background: var(--danger-gradient);
        color: white;
        border: none;
        padding: 1.5rem 4rem;
        border-radius: 50px;
        font-size: 1.4rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 10px 30px rgba(255, 107, 107, 0.4);
        transition: var(--transition);
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 12px;
    }
    
    .reserve-btn:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 15px 40px rgba(255, 107, 107, 0.5);
    }
    
    .reserve-btn:disabled {
        background: #6c757d;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }
    
    /* Modal de Reserva */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.85);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        padding: 2rem;
        backdrop-filter: blur(5px);
    }
    
    .modal-content {
        background: white;
        border-radius: 25px;
        padding: 3.5rem;
        max-width: 550px;
        width: 100%;
        box-shadow: 0 25px 60px rgba(0,0,0,0.3);
        position: relative;
        animation: modalSlideIn 0.4s ease;
    }
    
    @keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: translateY(-50px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }
    
    .modal-close {
        position: absolute;
        top: 1.5rem;
        right: 1.5rem;
        background: none;
        border: none;
        font-size: 1.8rem;
        color: #6c757d;
        cursor: pointer;
        transition: var(--transition);
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .modal-close:hover {
        color: #ff6b6b;
        background: #f8f9fa;
    }
    
    .modal-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
        text-align: center;
    }
    
    .modal-subtitle {
        color: #6c757d;
        text-align: center;
        margin-bottom: 2.5rem;
        font-size: 1.1rem;
    }
    
    .selected-time {
        background: var(--primary-gradient);
        color: white;
        padding: 1.2rem 1.5rem;
        border-radius: 15px;
        text-align: center;
        margin-bottom: 2.5rem;
        font-weight: 600;
        font-size: 1.3rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }
    
    .reserva-form {
        width: 100%;
    }
    
    .form-group {
        margin-bottom: 1.8rem;
    }
    
    .form-label {
        font-weight: 600;
        color: var(--dark-color);
        margin-bottom: 0.75rem;
        display: block;
        font-size: 1.05rem;
    }
    
    .form-control {
        width: 100%;
        padding: 1.2rem 1.5rem;
        border: 2px solid #e9ecef;
        border-radius: 12px;
        font-size: 1rem;
        transition: var(--transition);
        font-family: 'Inter', sans-serif;
    }
    
    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        outline: none;
    }
    
    .calendar-container {
        margin-bottom: 1.8rem;
    }
    
    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }
    
    .calendar-title {
        font-weight: 600;
        color: var(--dark-color);
        font-size: 1.1rem;
    }
    
    .flatpickr-calendar {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        border-radius: 12px;
        overflow: hidden;
    }
    
    .submit-btn {
        background: var(--secondary-gradient);
        color: white;
        border: none;
        padding: 1.4rem 2rem;
        border-radius: 15px;
        font-size: 1.2rem;
        font-weight: 600;
        width: 100%;
        cursor: pointer;
        transition: var(--transition);
        margin-top: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    
    .submit-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(67, 233, 123, 0.3);
    }
    
    /* Notificación de confirmación */
    .confirmation-toast {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        background: var(--secondary-gradient);
        color: white;
        padding: 1.2rem 2rem;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(67, 233, 123, 0.4);
        display: none;
        align-items: center;
        gap: 12px;
        z-index: 10001;
        animation: slideInRight 0.3s ease;
    }
    
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    /* Responsive */
    @media (max-width: 992px) {
        .page-title {
            font-size: 3.5rem;
        }
        
        .page-description {
            font-size: 1.3rem;
        }
        
        .section-heading {
            font-size: 2.5rem;
        }
    }
    
    @media (max-width: 768px) {
        .page-header {
            height: 60vh;
            min-height: 500px;
        }
        
        .page-title {
            font-size: 2.8rem;
        }
        
        .page-description {
            font-size: 1.2rem;
        }
        
        .schedule-section {
            padding: 2.5rem 2rem;
        }
        
        .section-heading {
            font-size: 2.2rem;
        }
        
        .schedule-day {
            padding: 2rem 1.5rem;
        }
        
        .day-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        
        .time-slots-grid {
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        }
        
        .modal-content {
            padding: 2.5rem;
        }
        
        .modal-title {
            font-size: 2rem;
        }
    }
    
    @media (max-width: 576px) {
        .page-content {
            padding: 3rem 1rem;
        }
        
        .schedule-section {
            padding: 2rem 1.5rem;
        }
        
        .reserve-btn {
            padding: 1.2rem 2.5rem;
            font-size: 1.2rem;
        }
        
        .modal-content {
            padding: 2rem 1.5rem;
        }
        
        .selected-time {
            font-size: 1.1rem;
            flex-direction: column;
            gap: 5px;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="service-page">
    <!-- Header con Banner -->
    <div class="page-header" {% if servicio.bannerUrl %}style="background-image: url('{{ servicio.bannerUrl }}')"{% endif %}>
        <div class="header-content">
            <h1 class="page-title">{{ servicio.nombre }}</h1>
            <p class="page-description">{{ servicio.descripcion }}</p>
        </div>
    </div>

    <!-- Contenido Principal -->
    <div class="page-content">
        <!-- Sección de Horarios -->
        <div class="schedule-section">
            <h2 class="section-heading">📅 Horarios de Atención</h2>
                <div style="text-align: center; margin-bottom: 1.5rem;">
                    <div class="week-toggle" style="display:inline-flex; gap:8px;">
                        <button type="button" id="weekBtn0" class="btn-week active" data-week="0" style="padding:8px 14px; border-radius:8px; border:1px solid #e9ecef; background:#fff; cursor:pointer;">Semana actual</button>
                        <button type="button" id="weekBtn1" class="btn-week" data-week="1" style="padding:8px 14px; border-radius:8px; border:1px solid #e9ecef; background:#fff; cursor:pointer;">Semana siguiente</button>
                    </div>
                </div>
            <div class="schedule-grid">
                {% set days = [
                    {id: 1, name: 'Lunes', icon: 'fas fa-calendar-day'},
                    {id: 2, name: 'Martes', icon: 'fas fa-calendar-day'},
                    {id: 3, name: 'Miércoles', icon: 'fas fa-calendar-day'},
                    {id: 4, name: 'Jueves', icon: 'fas fa-calendar-day'},
                    {id: 5, name: 'Viernes', icon: 'fas fa-calendar-day'},
                    {id: 6, name: 'Sábado', icon: 'fas fa-calendar-day'},
                    {id: 7, name: 'Domingo', icon: 'fas fa-calendar-day'}
                ] %}
                
                {% for day in days %}
                    <div class="schedule-day">
                        <div class="day-header">
                            <span class="day-name">
                                <i class="{{ day.icon }}"></i>
                                {{ day.name }}
                            </span>
                            <span class="day-status {{ day.id in servicio.diasTrabajo ? 'status-open' : 'status-closed' }}">
                                {{ day.id in servicio.diasTrabajo ? 'Abierto' : 'Cerrado' }}
                            </span>
                        </div>
                        {% if day.id in servicio.diasTrabajo %}
                            <div class="time-slots-grid">
                                {% for horario in servicio.horariosDisponibles %}
                                    <div class="time-slot" data-time="{{ horario }}" data-day="{{ day.name }}" data-day-id="{{ day.id }}">
                                        <span>{{ horario }}</span>
                                    </div>
                                {% endfor %}
                            </div>
                        {% else %}
                            <div style="text-align: center; padding: 2rem; color: #6c757d;">
                                <i class="fas fa-door-closed fa-2x"></i>
                                <p style="margin-top: 0.5rem; font-weight: 500;">No hay atención este día</p>
                            </div>
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
        </div>

        <!-- Botón de Reserva -->
        <div class="reserve-btn-container">
            <button class="reserve-btn" id="reserveButton" disabled>
                <i class="fas fa-calendar-check"></i>
                Confirmar Reserva
            </button>
        </div>
    </div>
</div>

<!-- Modal de Reserva -->
<div class="modal-overlay" id="reservationModal">
    <div class="modal-content">
        <button class="modal-close" onclick="closeModal()">
            <i class="fas fa-times"></i>
        </button>
        
        <h2 class="modal-title">Confirmar Reserva</h2>
        <p class="modal-subtitle">Complete sus datos para confirmar el turno</p>
        
        <div class="selected-time" id="selectedTimeDisplay">
            <i class="fas fa-clock"></i>
            <span id="timeDisplay"></span>
        </div>
        
        {{ form_start(form, {'attr': {'class': 'reserva-form', 'id': 'reservationForm'}}) }}
        
        <div class="form-group">
            {{ form_label(form.usuario_email) }}
            {{ form_widget(form.usuario_email, {'attr': {
                'class': 'form-control',
                'placeholder': 'ejemplo@email.com'
            }}) }}
        </div>
        
        <div class="form-group">
            <div class="calendar-container">
                <div class="calendar-header">
                    <span class="calendar-title">Seleccione la fecha</span>
                    <i class="fas fa-calendar-alt text-primary"></i>
                </div>
                {{ form_widget(form.fecha, {'attr': {
                    'class': 'form-control datepicker',
                    'placeholder': 'Seleccione una fecha'
                }}) }}
            </div>
        </div>
        
        <div class="form-group">
            {{ form_label(form.hora) }}
            {{ form_widget(form.hora, {'attr': {
                'class': 'form-control',
                'readonly': 'readonly'
            }}) }}
        </div>
        
        {{ form_widget(form.reservar, {'attr': {
            'class': 'submit-btn'
        }}) }}
        
        {{ form_end(form) }}
    </div>
</div>

<!-- Notificación de confirmación -->
<div class="confirmation-toast" id="confirmationToast">
    <i class="fas fa-check-circle fa-lg"></i>
    <span id="toastMessage">Reserva confirmada con éxito</span>
</div>
{% endblock %}

{% block javascript %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>
<script>
    // Datos del servidor: turnos reservados y fechas por semana
    const reserved = {{ reserved|default({})|json_encode()|raw }};
    const weekDates = {{ weekDates|default({0:[],1:[]})|json_encode()|raw }};
    let selectedWeek = 0; // 0 = semana actual, 1 = siguiente

    // Estilos para slots deshabilitados
    const disabledClass = 'disabled';
    let selectedTime = null;
    let selectedDay = null;
    let selectedDayId = null;
    let flatpickrInstance = null;

    // Inicializar calendario
    document.addEventListener('DOMContentLoaded', function() {
        // Configurar flatpickr en español
        flatpickrInstance = flatpickr(".datepicker", {
            locale: "es",
            minDate: "today",
            dateFormat: "Y-m-d",
            onChange: function(selectedDates, dateStr, instance) {
                updateSelectedDate(dateStr);
            }
        });
        
        // Establecer fecha inicial como hoy
    // Obtener la fecha actual en horario de Argentina
    const today = new Date(new Date().toLocaleString('es-AR', { timeZone: 'America/Argentina/Buenos_Aires' }));
        flatpickrInstance.setDate(today);
    // Marcar disponibilidad inicial
    renderSlotsAvailability();
    });

    // Seleccionar horario (respetando deshabilitados)
    function attachSlotListeners() {
        document.querySelectorAll('.time-slot').forEach(slot => {
            slot.onclick = function() {
                if (slot.classList.contains(disabledClass)) return; // no permitir selección

                // Remover selección anterior
                document.querySelectorAll('.time-slot').forEach(s => s.classList.remove('selected'));

                // Seleccionar nuevo
                slot.classList.add('selected');
                selectedTime = slot.dataset.time;
                selectedDay = slot.dataset.day;
                selectedDayId = parseInt(slot.dataset.dayId);

                // Habilitar botón de reserva
                document.getElementById('reserveButton').disabled = false;

                // Calcular y establecer la fecha correspondiente al día seleccionado y semana
                setDateForSelectedDay();
            };
        });
    }
    attachSlotListeners();

    // Calcular la fecha para el día seleccionado
    function setDateForSelectedDay() {
        if (!selectedDayId) return;

        // Usar weekDates calculadas en el servidor si están disponibles
        let formattedDate = null;
        if (typeof weekDates !== 'undefined' && weekDates[selectedWeek] && weekDates[selectedWeek][selectedDayId]) {
            formattedDate = weekDates[selectedWeek][selectedDayId];
        } else {
            // Fallback: calcular desde hoy
            const today = new Date();
            const currentDay = today.getDay(); // 0 (Domingo) a 6 (Sábado)
            const adjustedCurrentDay = currentDay === 0 ? 7 : currentDay;
            let daysToAdd = selectedDayId - adjustedCurrentDay;
            if (selectedWeek === 1 && daysToAdd >= 0) daysToAdd += 7;
            if (selectedWeek === 1 && daysToAdd < 0) daysToAdd += 7;
            const targetDate = new Date(today);
            targetDate.setDate(today.getDate() + daysToAdd);
            formattedDate = targetDate.toISOString().split('T')[0];
        }

        // Establecer la fecha en el calendario
        if (flatpickrInstance && formattedDate) {
            flatpickrInstance.setDate(formattedDate);
        }

        // Actualizar campo de fecha en el formulario
        document.getElementById('{{ form.fecha.vars.id }}').value = formattedDate;
    }

    // Actualizar fecha seleccionada
    function updateSelectedDate(dateStr) {
        document.getElementById('{{ form.fecha.vars.id }}').value = dateStr;
        updateTimeDisplay();
    }

    // Actualizar visualización del tiempo seleccionado
    function updateTimeDisplay() {
        if (selectedTime) {
            const fechaInput = document.getElementById('{{ form.fecha.vars.id }}');
            const fechaSeleccionada = fechaInput.value;
            
            if (fechaSeleccionada) {
                // Formatear fecha en formato legible
                const fecha = new Date(fechaSeleccionada);
                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                const fechaFormateada = fecha.toLocaleDateString('es-ES', options);
                
                // Mostrar en el modal
                document.getElementById('timeDisplay').textContent = 
                    `${fechaFormateada} - ${selectedTime}`;
            }
        }
    }

    // Abrir modal de reserva
    document.getElementById('reserveButton').addEventListener('click', function() {
        if (selectedTime) {
            // Actualizar campos del formulario
            // Añadir segundos para compatibilidad con TimeType
            document.getElementById('{{ form.hora.vars.id }}').value = selectedTime + ':00';
            updateTimeDisplay();
            
            // Mostrar modal
            document.getElementById('reservationModal').style.display = 'flex';
        }
    });

    // Cerrar modal
    function closeModal() {
        document.getElementById('reservationModal').style.display = 'none';
    }

    // Cerrar modal al hacer clic fuera
    document.getElementById('reservationModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeModal();
        }
    });

    // Cerrar con ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeModal();
        }
    });

    // Mostrar notificación de confirmación
    function showConfirmation(message) {
        const toast = document.getElementById('confirmationToast');
        const messageElement = document.getElementById('toastMessage');
        
        messageElement.textContent = message;
        toast.style.display = 'flex';
        
        setTimeout(() => {
            toast.style.display = 'none';
        }, 5000);
    }

    // Manejar envío del formulario: permitir envío normal, deshabilitar botón para evitar doble envío
    document.getElementById('reservationForm').addEventListener('submit', function(e) {
        const submitBtn = this.querySelector('button[type="submit"]');
        if (submitBtn) submitBtn.disabled = true;
        // Dejar que el formulario se envíe normalmente; la verificación contra duplicados la hace el servidor.
    });

    // Renderizar disponibilidad marcando slots reservados
    function renderSlotsAvailability() {
        document.querySelectorAll('.time-slot').forEach(slot => {
            const time = slot.dataset.time; // formato 'HH:MM' esperado
            const dayId = parseInt(slot.dataset.dayId);

            // Determinar la fecha objetivo según la semana seleccionada
            let dateForDay = null;
            if (typeof weekDates !== 'undefined' && weekDates[selectedWeek] && weekDates[selectedWeek][dayId]) {
                dateForDay = weekDates[selectedWeek][dayId];
            }

            // Comprobar si está reservado
            let isReserved = false;
            if (dateForDay && reserved && reserved[dateForDay]) {
                // reserved[date] es array de strings 'HH:MM'
                if (reserved[dateForDay].includes(time)) {
                    isReserved = true;
                }
            }

            if (isReserved) {
                slot.classList.add(disabledClass);
                slot.setAttribute('aria-disabled', 'true');
                slot.style.pointerEvents = 'none';
            } else {
                slot.classList.remove(disabledClass);
                slot.removeAttribute('aria-disabled');
                slot.style.pointerEvents = '';
            }
        });
    }

    // Manejar cambio de semana
    document.querySelectorAll('.btn-week').forEach(btn => {
        btn.addEventListener('click', function() {
            document.querySelectorAll('.btn-week').forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            selectedWeek = parseInt(this.dataset.week);
            // Re-renderizar disponibilidad
            renderSlotsAvailability();
            // Si hay una selección activa, recalcular la fecha para esa selección
            if (selectedDayId) setDateForSelectedDay();
        });
    });

    // Estilo CSS dinámico para disabled
    (function injectDisabledStyles(){
        const css = `.time-slot.disabled { opacity: 0.45; cursor: not-allowed; box-shadow: none; color: #6c757d; }`;
        const style = document.createElement('style');
        style.appendChild(document.createTextNode(css));
        document.head.appendChild(style);
    })();
</script>
{% endblock %}